<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="app.pp.mapper.ModelMapper">
  <resultMap id="BaseResultMap" type="app.pp.entity.Model">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="plimit" jdbcType="INTEGER" property="plimit" />
    <result column="state" jdbcType="INTEGER" property="state" />
    <result column="path" jdbcType="VARCHAR" property="path" />
    <result column="createtime" jdbcType="TIMESTAMP" property="createtime" />
    <result column="createuser" jdbcType="INTEGER" property="createuser" />
  </resultMap>
  <sql id="Base_Column_List">
    id, `name`, plimit, `state`, `path`, createtime, `createuser`
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from model
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from model
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="app.pp.entity.Model">
    insert into model (id, `name`, plimit, 
      `state`, `path`, createtime, 
      `createuser`)
    values (#{id,jdbcType=INTEGER}, #{name,jdbcType=VARCHAR}, #{plimit,jdbcType=INTEGER}, 
      #{state,jdbcType=INTEGER}, #{path,jdbcType=VARCHAR}, #{createtime,jdbcType=TIMESTAMP}, 
      #{createuser,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="app.pp.entity.Model">
    insert into model
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="name != null">
        `name`,
      </if>
      <if test="plimit != null">
        plimit,
      </if>
      <if test="state != null">
        `state`,
      </if>
      <if test="path != null">
        `path`,
      </if>
      <if test="createtime != null">
        createtime,
      </if>
      <if test="createuser != null">
        `createuser`,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="plimit != null">
        #{plimit,jdbcType=INTEGER},
      </if>
      <if test="state != null">
        #{state,jdbcType=INTEGER},
      </if>
      <if test="path != null">
        #{path,jdbcType=VARCHAR},
      </if>
      <if test="createtime != null">
        #{createtime,jdbcType=TIMESTAMP},
      </if>
      <if test="createuser != null">
        #{createuser,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="app.pp.entity.Model">
    update model
    <set>
      <if test="name != null">
        `name` = #{name,jdbcType=VARCHAR},
      </if>
      <if test="plimit != null">
        plimit = #{plimit,jdbcType=INTEGER},
      </if>
      <if test="state != null">
        `state` = #{state,jdbcType=INTEGER},
      </if>
      <if test="path != null">
        `path` = #{path,jdbcType=VARCHAR},
      </if>
      <if test="createtime != null">
        createtime = #{createtime,jdbcType=TIMESTAMP},
      </if>
      <if test="createuser != null">
        `createuser` = #{createuser,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="app.pp.entity.Model">
    update model
    set `name` = #{name,jdbcType=VARCHAR},
      plimit = #{plimit,jdbcType=INTEGER},
      `state` = #{state,jdbcType=INTEGER},
      `path` = #{path,jdbcType=VARCHAR},
      createtime = #{createtime,jdbcType=TIMESTAMP},
      `createuser` = #{createuser,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>