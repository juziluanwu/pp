<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="app.pp.mapper.SysUserDao">
    <resultMap id="BaseResultMap" type="app.pp.entity.SysUserEntity">
        <id column="user_id" jdbcType="INTEGER" property="userId"/>
        <result column="username" jdbcType="VARCHAR" property="username"/>
        <result column="password" jdbcType="VARCHAR" property="password"/>
        <result column="name" jdbcType="VARCHAR" property="name"/>
        <result column="status" jdbcType="INTEGER" property="status"/>
        <result column="create_user_id" jdbcType="INTEGER" property="createUserId"/>
        <result column="create_time" jdbcType="TIMESTAMP" property="createTime"/>
        <result column="groupid" jdbcType="INTEGER" property="groupid"/>
    </resultMap>
    <!-- 查询用户的所有权限 -->
    <select id="queryAllPerms" resultType="string">
		select m.perms from sys_user_role ur
			LEFT JOIN sys_role_menu rm on ur.role_id = rm.role_id
			LEFT JOIN sys_menu m on rm.menu_id = m.menu_id
		where ur.user_id = #{userId}
	</select>

    <!-- 查询用户的所有菜单ID -->
    <select id="queryAllMenuId" resultType="long">
		select distinct rm.menu_id from sys_user_role ur
			LEFT JOIN sys_role_menu rm on ur.role_id = rm.role_id
		where ur.user_id = #{userId}
	</select>

    <select id="queryByUserName" resultType="app.pp.entity.SysUserEntity" resultMap="BaseResultMap">
		select * from sys_user where username = #{username}
	</select>
    <update id="updateById" parameterType="app.pp.entity.SysUserEntity">
        update sys_user
        <set>
            <if test="username != null and username != ''">
                username=#{username},
            </if>
            <if test="password!=null and password!=''">
                password=#{password},
            </if>
            <if test="name !=null and name!=''">
                name=#{name},
            </if>
            <if test="status!=null">
                status=#{status},
            </if>
            <if test="groupid!=null">
                groupid = #{groupid},
            </if>
        </set>
        where user_id=#{userId}
    </update>
    <delete id="deleteBatchIds" parameterType="java.util.ArrayList">
        delete from sys_user where user_id in
        <foreach item="userId" collection="list" open="(" separator="," close=")">
            #{userId}
        </foreach>
    </delete>

    <select id="selectByMap" resultMap="BaseResultMap">
        select u.* from sys_user u
        <where>
            1=1
            <if test="username!=null and username !=''">
                and  u.username like CONCAT('%',#{username},'%' )
            </if>
            <if test="createUserId!=null and createUserId !=''">
                and  u.create_user_id=#{createUserId}
            </if>
        </where>
        order by u.user_id desc
    </select>

    <update id="updatePassword">
        update sys_user set password=#{newPassword} where user_id=#{userId} and password=#{password}
    </update>

    <select id="selectById" resultMap="BaseResultMap" resultType="app.pp.entity.SysUserEntity">
        select * from sys_user where user_id=#{value}
    </select>
    <select id="selectPermissByUserId" resultType="string" parameterType="long">
		select m.perms from sys_user_role ur
			LEFT JOIN sys_role_menu rm on ur.role_id = rm.role_id
			LEFT JOIN sys_menu m on rm.menu_id = m.menu_id
		where m.type=2 and  ur.user_id = #{userId}
	</select>
    <insert id="insert" useGeneratedKeys="true" keyProperty="userId" parameterType="app.pp.entity.SysUserEntity">
    insert into sys_user(username,password,name,status,create_user_id,create_time,groupid)
    values(#{username},#{password},#{name},#{status},#{createUserId},#{createTime},#{groupid})

    </insert>

    <select id="selectByUsername" parameterType="String" resultMap="BaseResultMap">
        select * from sys_user where username = #{username}
    </select>
</mapper>