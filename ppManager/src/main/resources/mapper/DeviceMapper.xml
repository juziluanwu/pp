<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="app.pp.mapper.DeviceMapper">
  <resultMap id="BaseResultMap" type="app.pp.entity.Device">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="devicenum" jdbcType="VARCHAR" property="devicenum" />
    <result column="carnum" jdbcType="VARCHAR" property="carnum" />
    <result column="state" jdbcType="INTEGER" property="state" />
    <result column="createdtime" jdbcType="TIMESTAMP" property="createdtime" />
    <result column="synstate" jdbcType="INTEGER" property="synstate" />
  </resultMap>
  <sql id="Base_Column_List">
    id, devicenum, carnum, `state`, createdtime, synstate
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from device
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from device
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="java.util.List">
    insert into device (id, devicenum, carnum, 
      `state`, createdtime, synstate
      )
    values
    <foreach collection="list" item="item" index="index" separator=",">
     (#{item.id,jdbcType=INTEGER}, #{item.devicenum,jdbcType=VARCHAR}, #{item.carnum,jdbcType=VARCHAR},
      #{item.state,jdbcType=INTEGER}, #{item.createdtime,jdbcType=TIMESTAMP}, #{item.synstate,jdbcType=INTEGER}
      )
    </foreach>
  </insert>
  <insert id="insertSelective" parameterType="app.pp.entity.Device">
    insert into device
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="devicenum != null">
        devicenum,
      </if>
      <if test="carnum != null">
        carnum,
      </if>
      <if test="state != null">
        `state`,
      </if>
      <if test="createdtime != null">
        createdtime,
      </if>
      <if test="synstate != null">
        synstate,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="devicenum != null">
        #{devicenum,jdbcType=VARCHAR},
      </if>
      <if test="carnum != null">
        #{carnum,jdbcType=VARCHAR},
      </if>
      <if test="state != null">
        #{state,jdbcType=INTEGER},
      </if>
      <if test="createdtime != null">
        #{createdtime,jdbcType=TIMESTAMP},
      </if>
      <if test="synstate != null">
        #{synstate,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="app.pp.entity.Device">
    update device
    <set>
      <if test="devicenum != null">
        devicenum = #{devicenum,jdbcType=VARCHAR},
      </if>
      <if test="carnum != null">
        carnum = #{carnum,jdbcType=VARCHAR},
      </if>
      <if test="state != null">
        `state` = #{state,jdbcType=INTEGER},
      </if>
      <if test="createdtime != null">
        createdtime = #{createdtime,jdbcType=TIMESTAMP},
      </if>
      <if test="synstate != null">
        synstate = #{synstate,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="app.pp.entity.Device">
    update device
    set devicenum = #{devicenum,jdbcType=VARCHAR},
      carnum = #{carnum,jdbcType=VARCHAR},
      `state` = #{state,jdbcType=INTEGER},
      createdtime = #{createdtime,jdbcType=TIMESTAMP},
      synstate = #{synstate,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>

  <select id="selectAll" resultType="app.pp.entity.Device">
    select * from device
  </select>

  <update id="updateSynState" parameterType="map">
    update device set synstate = #{synstate} where id = #{id}
  </update>

  <select id="list" resultType="app.pp.entity.Device">
    SELECT de.*,sa.`salenum`,gr.`name` FROM `device` de LEFT JOIN `saleslip` sa ON de.`id` = sa.`deviceid` LEFT JOIN `group` gr ON gr.`id` = sa.`groupid`  order by de.id desc
  </select>
</mapper>